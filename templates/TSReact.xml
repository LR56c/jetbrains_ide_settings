<templateSet group="TSReact">
  <template name="i" value="interface $END$ {&#10;}&#10;" description="interface" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="t" value="type $END$ = &#10;" description="type alias" toReformat="false" toShortenFQNames="true">
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="efcr" value="const $NAME$: FC&lt;$typeProps$&gt; = ($END$) =&gt; {&#10;  return (&#10;    &lt;div&gt;$NAME$&lt;/div&gt;&#10;  )&#10;}&#10;&#10;export default $NAME$ " description="export fc resume" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="typeProps" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
  <template name="c" value="export const $NAME$Context = createContext({} as $END$);&#10;const { Provider } = $NAME$Context;" description="create context" toReformat="false" toShortenFQNames="true">
    <variable name="NAME" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="TypeScript" value="true" />
    </context>
  </template>
</templateSet>